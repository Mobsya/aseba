resources:
   containers:
   - container: fpkde
     options: '--privileged'
     image: mobsya/flatpak-builders:kde-latest

trigger:
  tags:
    include:
    - 2.*
  branches:
    include:
    - '*'

variables:
- group: passwords
- name: scratch_version
  value: "v20210324.3"
- name: packet_version
  value: "2.2.0"
- name: scratch_url
  value: "https://github.com/Mobsya/scratch-gui/releases/download/$(scratch_version)/scratch-gui.tar.gz"
- name: vpl3_url
  value: "https://github.com/Mobsya/ci-data/releases/download/data/vpl3-thymio-suite-android.tar.gz"
- name: vcpkg_commit
  value: "cccef600decd1091a20a0b4d8a2e61f7041eb686"
- name: visual_bootstrapper
  value: "https://github.com/Mobsya/ci-data/releases/download/data/vs_enterprise.exe"

jobs:
- job: 'BuildAndroid_armeabi'
  pool:
    vmImage: 'Ubuntu-18.04'
  strategy:
    matrix:
      armeabi:
        TARGET_ARCH: 'armeabi-v7a'
      aarch64:
        TARGET_ARCH: 'arm64-v8a'
      x86_64:
        TARGET_ARCH: 'x86_64'
  variables:
    - group: passport
    - name: API_LEVEL
      value: '29'
    - name: NDK_VERSION
      value: '21'
    - name: QT_VERSION
      value: '5.15.2'
    - name: CMAKE_VERSION
      value: '3.19.7'
  steps:
  - task: DownloadSecureFile@1
    name: keystore
    displayName: 'Download android keystore'
    inputs:
      secureFile: 'thymio_suite_mobile.p12'

  - script: |
      mv $(keystore.secureFilePath) .
    displayName: 'Move secure file'
    condition: ne(variables['Build.Reason'], 'PullRequest')

  - script: |
      docker pull mobsya/thymio-dev-env:android$API_LEVEL-ndk$NDK_VERSION-qt$QT_VERSION-cmake${CMAKE_VERSION}
    displayName: 'Pull docker image'

  - script: |
      git submodule update --init --recursive
    displayName: 'Clone submodules'
    
  - script: |
      wget -q $(scratch_url) && tar xzf scratch-gui.tar.gz -C .
      wget -q $(vpl3_url) && tar xzf vpl3-thymio-suite-android.tar.gz -C .
    displayName: 'Fetch VPL3 & Scratch'

  - script: |
      mkdir $(pwd)/build $(pwd)/build/$TARGET_ARCH
      sudo docker run --rm \
            -e KEYSTORE_PASSWORD=$(keystore_pass) \
            -v $(pwd):/src:rw \
            -v $(pwd)/build/$TARGET_ARCH:/build:rw \
            mobsya/thymio-dev-env:android$API_LEVEL-ndk$NDK_VERSION-qt$QT_VERSION-cmake${CMAKE_VERSION} \
            "keytool -list -keystore thymio_suite_mobile.p12 -storepass $(keystore_pass) | grep -q 'Your keystore contains 1 entry' && echo 'The keystore password is correct' && cmake -DANDROID_NATIVE_API_LEVEL=$API_LEVEL -DANDROID_ABI=$TARGET_ARCH -DCMAKE_TOOLCHAIN_FILE=/android/ndk/android-ndk-r$NDK_VERSION/build/cmake/android.toolchain.cmake -DCMAKE_FIND_ROOT_PATH=/qt -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -GNinja -S /src -B /build && cd /build && ninja -j $(nproc)"
      cp "build/$TARGET_ARCH/bin/thymio-launcher.apk" "$(Build.ArtifactStagingDirectory)/thymio-launcher_$TARGET_ARCH.apk"
    displayName: 'Build Thymio Suite and sign'
    condition: ne(variables['Build.Reason'], 'PullRequest')
    
  - script: |
      mkdir $(pwd)/build $(pwd)/build/$TARGET_ARCH
      sudo docker run --rm \
            -v $(pwd):/src:rw \
            -v $(pwd)/build/$TARGET_ARCH:/build:rw \
            mobsya/thymio-dev-env:android$API_LEVEL-ndk$NDK_VERSION-qt$QT_VERSION-cmake${CMAKE_VERSION} \
            "cmake -DANDROID_NATIVE_API_LEVEL=$API_LEVEL -DANDROID_ABI=$TARGET_ARCH -DCMAKE_TOOLCHAIN_FILE=/android/ndk/android-ndk-r$NDK_VERSION/build/cmake/android.toolchain.cmake -DCMAKE_FIND_ROOT_PATH=/qt -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -GNinja -S /src -B /build && cd /build && ninja -j $(nproc)"
      cp "build/$TARGET_ARCH/bin/thymio-launcher.apk" "$(Build.ArtifactStagingDirectory)/thymio-launcher_$TARGET_ARCH.apk"
    displayName: 'Build Thymio Suite without signing'
    condition: eq(variables['Build.Reason'], 'PullRequest')
   
  - script: |
      curl -sL https://firebase.tools | bash
      firebase appdistribution:distribute $(Build.ArtifactStagingDirectory)/thymio-launcher_$TARGET_ARCH.apk --app 1:1076253646123:android:91d4d8e3a0ef626bb5396e --token $(FIREBASE_TOKEN) --release-notes "Build $(Build.BuildNumber) Version $(packet_version) of Thymio Suite under $TARGET_ARCH architecture"
    displayName: 'Deploy to firebase'
    condition: ne(variables['Build.Reason'], 'PullRequest')

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'thymio-suite-android'
