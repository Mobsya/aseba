if(WIN32)
    set(HAS_ZEROCONF_SUPPORT ON)
    add_library(zeroconf INTERFACE)
    target_include_directories(zeroconf INTERFACE ${PROJECT_SOURCE_DIR}/third_party/bonjour/include/)
    if( CMAKE_SIZEOF_VOID_P EQUAL 8 )
        target_link_libraries(zeroconf INTERFACE ${PROJECT_SOURCE_DIR}/third_party/bonjour/lib/x64/dnssd64.lib ${CMAKE_THREAD_LIBS_INIT})
    else()
        target_link_libraries(zeroconf INTERFACE ${PROJECT_SOURCE_DIR}/third_party/bonjour/lib/x86/dnssd32.lib ${CMAKE_THREAD_LIBS_INIT})
    endif()
    set(DNSSD_FOUND ON)
    target_link_libraries(zeroconf INTERFACE ws2_32)

else()
    find_package(DNSSD)

    find_library(AVAHI_COMMON_LIBRARIES avahi-common)
    find_library(AVAHI_CLIENT_LIBRARIES avahi-client)

    if (AVAHI_COMMON_LIBRARIES)
        add_library(libavahi ${PROJECT_SOURCE_DIR}/third_party/avahi-compat-libdns_sd/compat.c)
        target_link_libraries(libavahi PUBLIC ${AVAHI_CLIENT_LIBRARIES} ${AVAHI_COMMON_LIBRARIES})
        target_include_directories(libavahi INTERFACE ${DNSSD_INCLUDE_DIRS})
        target_compile_definitions(libavahi PUBLIC -DDNSSD_AVAHI)
        set(HAS_AVAHI_SUPPORT ON)
    endif()
    if (DNSSD_FOUND)
        set(HAS_ZEROCONF_SUPPORT ON)
        add_library(zeroconf INTERFACE)
        target_include_directories(zeroconf INTERFACE ${DNSSD_INCLUDE_DIRS})
        target_compile_definitions(zeroconf INTERFACE -DZEROCONF_SUPPORT)
        target_link_libraries(zeroconf INTERFACE ${DNSSD_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
        if (HAS_AVAHI_SUPPORT)
            target_link_libraries(zeroconf INTERFACE libavahi)
        endif()
        if (WIN32)
            target_link_libraries(zeroconf INTERFACE ws2_32)
        endif(WIN32)
    endif()
endif()