<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>CFBundleDevelopmentRegion</key>
    <string>English</string>

    <!-- Executable Name -->
    <key>CFBundleExecutable</key>
    <string>${MACOSX_BUNDLE_EXECUTABLE_NAME}</string>

    <!-- Specify that the language is manged internaly in the app -->
    <key>CFBundleAllowMixedLocalizations</key>
    <true/>

    <!-- Info for finder -->
    <key>CFBundleGetInfoString</key>
    <string>${MACOSX_BUNDLE_INFO_STRING}</string>

    <!-- Full screen, allow multi task or not  -->
    <key>UIRequiresFullScreen</key>
    <string>${MACOSX_BUNDLE_REQUIRES_FULL_SCREEN}</string>

    <!-- Hide the status bar -->
    <key>UIStatusBarHidden</key>
    <${MACOSX_BUNDLE_HIDDEN_STATUS_BAR}/>

    <!-- If supporting multitask LaunchScreen.storyboard must be provided -->
    <key>UILaunchStoryboardName</key>
    <string>${MACOSX_BUNDLE_LAUNCHSCREEN_STORYBOARD}</string>

    <!-- Optionnal StoryBoard filename -->
    <key>UIMainStoryboardFile</key>
    <string>${MACOSX_BUNDLE_MAIN_STORYBOARD}</string>

    <!-- Name displayed -->
    <key>CFBundleIdentifier</key>
    <string>${MACOSX_BUNDLE_GUI_IDENTIFIER}</string>

    <key>CFBundleInfoDictionaryVersion</key>
    <string>6.0</string>

    <!-- Long version that include build number or git commit -->
    <key>CFBundleLongVersionString</key>
    <string>${MACOSX_BUNDLE_LONG_VERSION_STRING}</string>

    <!-- Unique bundle name across AppStore -->
    <key>CFBundleName</key>
    <string>${MACOSX_BUNDLE_BUNDLE_NAME}</string>

    <key>CFBundlePackageType</key>
    <string>APPL</string>

    <!-- Short Version -->
    <key>CFBundleShortVersionString</key>
    <string>${MACOSX_BUNDLE_SHORT_VERSION_STRING}</string>

    <key>CFBundleSignature</key>
    <string>????</string>

    <!-- Bundle Version to detect update on AppStore -->
    <key>CFBundleVersion</key>
    <string>${MACOSX_BUNDLE_BUNDLE_VERSION}</string>

    <key>CSResourcesFileMapped</key>
    <true/>

    <!-- Copyright -->
    <key>NSHumanReadableCopyright</key>
    <string>${MACOSX_BUNDLE_COPYRIGHT}</string>

    <!-- PERMISSIONS -->
    <key>NSDocumentsFolderUsageDescription</key>
    <string>Folder</string>
    <key>NSFileProviderDomainUsageDescription</key>
    <string>File</string>
    <key>NSDownloadsFolderUsageDescription</key>
    <string>Download Folder</string>
    <key>NSAppleMusicUsageDescription</key>
    <string>Media Library</string>
    <key>NSPhotoLibraryUsageDescription</key>
    <string>Photo Library</string>
    <key>NSCameraUsageDescription</key>
    <string>Camera</string>
    <key>NSFileProviderPresenceUsageDescription</key>
    <string>FileProv</string>
    <key>NSAppTransportSecurity</key>
    <dict>
        <key>NSAllowsArbitraryLoads</key>
        <true/>
        <key>NSAllowsArbitraryLoadsInWebContent</key>
        <true/>
        <key>NSAllowsLocalNetworking</key>
        <true/>
    </dict>
    <key>NSBluetoothAlwaysUsageDescription</key>
    <string>Our app does not request this permission or utilize this functionality but it is included in our info.plist since our app utilizes the react-native-permissions library, which references this permission in its code.</string>
    <key>NSLocalNetworkUsageDescription</key>
        <string>Thymio Suite is looking for local Thymio devices</string>
    <key>NSBonjourServices</key>
    <array>
        <string>_mobsya._tcp.</string>
    </array>
    
     <!-- Export compliance keys -->
    <key>ITSAppUsesNonExemptEncryption</key><false/>

    <!-- Ui Orientation -->
    <key>UISupportedInterfaceOrientations</key>
    <array>
        <string>${MACOSX_BUNDLE_PORTRAIT}</string>
        <string>${MACOSX_BUNDLE_LANDSCAPELEFT}</string>
        <string>${MACOSX_BUNDLE_LANDSCAPERIGHT}</string>
    </array>
    <key>UISupportedInterfaceOrientations~ipad</key>
    <array>
        <string>${MACOSX_BUNDLE_PORTRAIT}</string>
        <string>${MACOSX_BUNDLE_PORTRAITUPDOWN}</string>
        <string>${MACOSX_BUNDLE_LANDSCAPELEFT}</string>
        <string>${MACOSX_BUNDLE_LANDSCAPERIGHT}</string>
    </array>
</dict>
</plist>