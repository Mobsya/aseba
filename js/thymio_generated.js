// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var mobsya = mobsya || {};

/**
 * @const
 * @namespace
 */
mobsya.fb = mobsya.fb || {};

/**
 * The Type of a node
 * A node can designate either a robot, a simulator, each with various capabilities.
 *
 * @enum
 */
mobsya.fb.NodeType = {
  Thymio2: 0,
  ThymioWireless: 1
};

/**
 * The status of a node represents whether the node is connected and available.
 *
 * @enum
 */
mobsya.fb.NodeStatus = {
  /**
   * The status is unknown, this denotes a programmation error or a bug
   */
  unknown: 0,

  /**
   * The node is just connected. However, sending code or requesting a VM desciption is unspecified in this state
   */
  connected: 1,

  /**
   * The node is available. It needs to be sent a LockNode message before any action that would mutate it state, such as sending code can take place
   */
  available: 2,

  /**
   * The node is busy - this will be sent to all clients, except the one who locked the node
   */
  busy: 3,

  /**
   * The node is ready - this will be sent the client that optained a lock on the node
   */
  ready: 4,

  /**
   * The node is disconnected. Any reference to it will be destroyed on the server side, and sending further messages to it will fail
   */
  disconnected: 5
};

/**
 * @enum
 */
mobsya.fb.ErrorType = {
  /**
   * Genric error
   */
  unknown_error: 0,

  /**
   * The node ddoes not exist or was disconnected
   */
  unknown_node: 1,

  /**
   * The node is busy (locked by another client)
   */
  node_busy: 2
};

/**
 * @enum
 */
mobsya.fb.AnyMessage = {
  NONE: 0,
  RequestListOfNodes: 1,
  RequestNodeAsebaVMDescription: 2,
  LockNode: 3,
  UnlockNode: 4,
  RequestAsebaCodeLoad: 5,
  RequestAsebaCodeRun: 6,
  NodesChanged: 7,
  NodeAsebaVMDescription: 8,
  RequestCompleted: 9,
  Error: 10,
  CompilationError: 11
};

/**
 *>A node id
 *
 * @constructor
 */
mobsya.fb.NodeId = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.NodeId}
 */
mobsya.fb.NodeId.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.NodeId=} obj
 * @returns {mobsya.fb.NodeId}
 */
mobsya.fb.NodeId.getRootAsNodeId = function(bb, obj) {
  return (obj || new mobsya.fb.NodeId).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
mobsya.fb.NodeId.prototype.id = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
mobsya.fb.NodeId.prototype.idLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
mobsya.fb.NodeId.prototype.idArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.NodeId.startNodeId = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} idOffset
 */
mobsya.fb.NodeId.addId = function(builder, idOffset) {
  builder.addFieldOffset(0, idOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.NodeId.createIdVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
mobsya.fb.NodeId.startIdVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.NodeId.endNodeId = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * Represent a node
 *
 * @constructor
 */
mobsya.fb.Node = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.Node}
 */
mobsya.fb.Node.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.Node=} obj
 * @returns {mobsya.fb.Node}
 */
mobsya.fb.Node.getRootAsNode = function(bb, obj) {
  return (obj || new mobsya.fb.Node).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {mobsya.fb.NodeId=} obj
 * @returns {mobsya.fb.NodeId|null}
 */
mobsya.fb.Node.prototype.nodeId = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new mobsya.fb.NodeId).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @returns {mobsya.fb.NodeStatus}
 */
mobsya.fb.Node.prototype.status = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {mobsya.fb.NodeStatus} */ (this.bb.readInt32(this.bb_pos + offset)) : mobsya.fb.NodeStatus.unknown;
};

/**
 * @param {mobsya.fb.NodeStatus} value
 * @returns {boolean}
 */
mobsya.fb.Node.prototype.mutate_status = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {mobsya.fb.NodeType}
 */
mobsya.fb.Node.prototype.type = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {mobsya.fb.NodeType} */ (this.bb.readInt32(this.bb_pos + offset)) : mobsya.fb.NodeType.Thymio2;
};

/**
 * @param {mobsya.fb.NodeType} value
 * @returns {boolean}
 */
mobsya.fb.Node.prototype.mutate_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
mobsya.fb.Node.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.Node.startNode = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodeIdOffset
 */
mobsya.fb.Node.addNodeId = function(builder, nodeIdOffset) {
  builder.addFieldOffset(0, nodeIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {mobsya.fb.NodeStatus} status
 */
mobsya.fb.Node.addStatus = function(builder, status) {
  builder.addFieldInt32(1, status, mobsya.fb.NodeStatus.unknown);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {mobsya.fb.NodeType} type
 */
mobsya.fb.Node.addType = function(builder, type) {
  builder.addFieldInt32(2, type, mobsya.fb.NodeType.Thymio2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
mobsya.fb.Node.addName = function(builder, nameOffset) {
  builder.addFieldOffset(3, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.Node.endNode = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * Message sent by the server when a node changes status.
 * This messages is automatically sent when the application first connects and each time one or more node change status
 *
 * @constructor
 */
mobsya.fb.NodesChanged = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.NodesChanged}
 */
mobsya.fb.NodesChanged.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.NodesChanged=} obj
 * @returns {mobsya.fb.NodesChanged}
 */
mobsya.fb.NodesChanged.getRootAsNodesChanged = function(bb, obj) {
  return (obj || new mobsya.fb.NodesChanged).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * Nodes whose status changed. it's up to the client to maintain a list of all nodes.
 *
 * @param {number} index
 * @param {mobsya.fb.Node=} obj
 * @returns {mobsya.fb.Node}
 */
mobsya.fb.NodesChanged.prototype.nodes = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new mobsya.fb.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
mobsya.fb.NodesChanged.prototype.nodesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.NodesChanged.startNodesChanged = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodesOffset
 */
mobsya.fb.NodesChanged.addNodes = function(builder, nodesOffset) {
  builder.addFieldOffset(0, nodesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.NodesChanged.createNodesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
mobsya.fb.NodesChanged.startNodesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.NodesChanged.endNodesChanged = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * Ask the server to send a list of all nodes
 * The server will send back a NodesChanged message containing infos on all nodes
 *
 * @constructor
 */
mobsya.fb.RequestListOfNodes = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.RequestListOfNodes}
 */
mobsya.fb.RequestListOfNodes.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.RequestListOfNodes=} obj
 * @returns {mobsya.fb.RequestListOfNodes}
 */
mobsya.fb.RequestListOfNodes.getRootAsRequestListOfNodes = function(bb, obj) {
  return (obj || new mobsya.fb.RequestListOfNodes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.RequestListOfNodes.startRequestListOfNodes = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.RequestListOfNodes.endRequestListOfNodes = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * Request the server to send a NodeAsebaVMDescription for the node corresponding to node_id
 *
 * @constructor
 */
mobsya.fb.RequestNodeAsebaVMDescription = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.RequestNodeAsebaVMDescription}
 */
mobsya.fb.RequestNodeAsebaVMDescription.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.RequestNodeAsebaVMDescription=} obj
 * @returns {mobsya.fb.RequestNodeAsebaVMDescription}
 */
mobsya.fb.RequestNodeAsebaVMDescription.getRootAsRequestNodeAsebaVMDescription = function(bb, obj) {
  return (obj || new mobsya.fb.RequestNodeAsebaVMDescription).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
mobsya.fb.RequestNodeAsebaVMDescription.prototype.requestId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
mobsya.fb.RequestNodeAsebaVMDescription.prototype.mutate_request_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {mobsya.fb.NodeId=} obj
 * @returns {mobsya.fb.NodeId|null}
 */
mobsya.fb.RequestNodeAsebaVMDescription.prototype.nodeId = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new mobsya.fb.NodeId).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.RequestNodeAsebaVMDescription.startRequestNodeAsebaVMDescription = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} requestId
 */
mobsya.fb.RequestNodeAsebaVMDescription.addRequestId = function(builder, requestId) {
  builder.addFieldInt32(0, requestId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodeIdOffset
 */
mobsya.fb.RequestNodeAsebaVMDescription.addNodeId = function(builder, nodeIdOffset) {
  builder.addFieldOffset(1, nodeIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.RequestNodeAsebaVMDescription.endRequestNodeAsebaVMDescription = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * The description of an Aseba VM, sent in response to a RequestNodeAsebaVMDescription
 *
 * @constructor
 */
mobsya.fb.NodeAsebaVMDescription = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.NodeAsebaVMDescription}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.NodeAsebaVMDescription=} obj
 * @returns {mobsya.fb.NodeAsebaVMDescription}
 */
mobsya.fb.NodeAsebaVMDescription.getRootAsNodeAsebaVMDescription = function(bb, obj) {
  return (obj || new mobsya.fb.NodeAsebaVMDescription).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.requestId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.mutate_request_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {mobsya.fb.NodeId=} obj
 * @returns {mobsya.fb.NodeId|null}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.nodeId = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new mobsya.fb.NodeId).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @returns {number}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.bytecodeSize = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.mutate_bytecode_size = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.dataSize = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.mutate_data_size = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.stackSize = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.mutate_stack_size = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {number} index
 * @param {mobsya.fb.NamedVariable=} obj
 * @returns {mobsya.fb.NamedVariable}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.variables = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? (obj || new mobsya.fb.NamedVariable).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.variablesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {mobsya.fb.LocalEvent=} obj
 * @returns {mobsya.fb.LocalEvent}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.events = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? (obj || new mobsya.fb.LocalEvent).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.eventsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {mobsya.fb.NativeFunction=} obj
 * @returns {mobsya.fb.NativeFunction}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.functions = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? (obj || new mobsya.fb.NativeFunction).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
mobsya.fb.NodeAsebaVMDescription.prototype.functionsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.NodeAsebaVMDescription.startNodeAsebaVMDescription = function(builder) {
  builder.startObject(8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} requestId
 */
mobsya.fb.NodeAsebaVMDescription.addRequestId = function(builder, requestId) {
  builder.addFieldInt32(0, requestId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodeIdOffset
 */
mobsya.fb.NodeAsebaVMDescription.addNodeId = function(builder, nodeIdOffset) {
  builder.addFieldOffset(1, nodeIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} bytecodeSize
 */
mobsya.fb.NodeAsebaVMDescription.addBytecodeSize = function(builder, bytecodeSize) {
  builder.addFieldInt32(2, bytecodeSize, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dataSize
 */
mobsya.fb.NodeAsebaVMDescription.addDataSize = function(builder, dataSize) {
  builder.addFieldInt32(3, dataSize, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} stackSize
 */
mobsya.fb.NodeAsebaVMDescription.addStackSize = function(builder, stackSize) {
  builder.addFieldInt32(4, stackSize, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} variablesOffset
 */
mobsya.fb.NodeAsebaVMDescription.addVariables = function(builder, variablesOffset) {
  builder.addFieldOffset(5, variablesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.NodeAsebaVMDescription.createVariablesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
mobsya.fb.NodeAsebaVMDescription.startVariablesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} eventsOffset
 */
mobsya.fb.NodeAsebaVMDescription.addEvents = function(builder, eventsOffset) {
  builder.addFieldOffset(6, eventsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.NodeAsebaVMDescription.createEventsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
mobsya.fb.NodeAsebaVMDescription.startEventsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} functionsOffset
 */
mobsya.fb.NodeAsebaVMDescription.addFunctions = function(builder, functionsOffset) {
  builder.addFieldOffset(7, functionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.NodeAsebaVMDescription.createFunctionsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
mobsya.fb.NodeAsebaVMDescription.startFunctionsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.NodeAsebaVMDescription.endNodeAsebaVMDescription = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
mobsya.fb.NamedVariable = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.NamedVariable}
 */
mobsya.fb.NamedVariable.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.NamedVariable=} obj
 * @returns {mobsya.fb.NamedVariable}
 */
mobsya.fb.NamedVariable.getRootAsNamedVariable = function(bb, obj) {
  return (obj || new mobsya.fb.NamedVariable).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
mobsya.fb.NamedVariable.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
mobsya.fb.NamedVariable.prototype.size = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
mobsya.fb.NamedVariable.prototype.mutate_size = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.NamedVariable.startNamedVariable = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
mobsya.fb.NamedVariable.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} size
 */
mobsya.fb.NamedVariable.addSize = function(builder, size) {
  builder.addFieldInt32(1, size, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.NamedVariable.endNamedVariable = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
mobsya.fb.LocalEvent = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.LocalEvent}
 */
mobsya.fb.LocalEvent.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.LocalEvent=} obj
 * @returns {mobsya.fb.LocalEvent}
 */
mobsya.fb.LocalEvent.getRootAsLocalEvent = function(bb, obj) {
  return (obj || new mobsya.fb.LocalEvent).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
mobsya.fb.LocalEvent.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
mobsya.fb.LocalEvent.prototype.description = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.LocalEvent.startLocalEvent = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
mobsya.fb.LocalEvent.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptionOffset
 */
mobsya.fb.LocalEvent.addDescription = function(builder, descriptionOffset) {
  builder.addFieldOffset(1, descriptionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.LocalEvent.endLocalEvent = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
mobsya.fb.NativeFunction = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.NativeFunction}
 */
mobsya.fb.NativeFunction.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.NativeFunction=} obj
 * @returns {mobsya.fb.NativeFunction}
 */
mobsya.fb.NativeFunction.getRootAsNativeFunction = function(bb, obj) {
  return (obj || new mobsya.fb.NativeFunction).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
mobsya.fb.NativeFunction.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
mobsya.fb.NativeFunction.prototype.description = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {mobsya.fb.NativeFunctionParameter=} obj
 * @returns {mobsya.fb.NativeFunctionParameter}
 */
mobsya.fb.NativeFunction.prototype.parameters = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new mobsya.fb.NativeFunctionParameter).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
mobsya.fb.NativeFunction.prototype.parametersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.NativeFunction.startNativeFunction = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
mobsya.fb.NativeFunction.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptionOffset
 */
mobsya.fb.NativeFunction.addDescription = function(builder, descriptionOffset) {
  builder.addFieldOffset(1, descriptionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} parametersOffset
 */
mobsya.fb.NativeFunction.addParameters = function(builder, parametersOffset) {
  builder.addFieldOffset(2, parametersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.NativeFunction.createParametersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
mobsya.fb.NativeFunction.startParametersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.NativeFunction.endNativeFunction = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
mobsya.fb.NativeFunctionParameter = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.NativeFunctionParameter}
 */
mobsya.fb.NativeFunctionParameter.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.NativeFunctionParameter=} obj
 * @returns {mobsya.fb.NativeFunctionParameter}
 */
mobsya.fb.NativeFunctionParameter.getRootAsNativeFunctionParameter = function(bb, obj) {
  return (obj || new mobsya.fb.NativeFunctionParameter).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
mobsya.fb.NativeFunctionParameter.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
mobsya.fb.NativeFunctionParameter.prototype.size = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
mobsya.fb.NativeFunctionParameter.prototype.mutate_size = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.NativeFunctionParameter.startNativeFunctionParameter = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
mobsya.fb.NativeFunctionParameter.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} size
 */
mobsya.fb.NativeFunctionParameter.addSize = function(builder, size) {
  builder.addFieldInt32(1, size, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.NativeFunctionParameter.endNativeFunctionParameter = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * Ask the server to give this client sole ownership of the node.
 * This needs to be done once before sending mutating instructions to the node
 * The lock remain until the client disconnect, the device disconnect or a UnlockNode message is sent
 * Once locked, the node appears busy to all clients.
 *
 * @constructor
 */
mobsya.fb.LockNode = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.LockNode}
 */
mobsya.fb.LockNode.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.LockNode=} obj
 * @returns {mobsya.fb.LockNode}
 */
mobsya.fb.LockNode.getRootAsLockNode = function(bb, obj) {
  return (obj || new mobsya.fb.LockNode).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
mobsya.fb.LockNode.prototype.requestId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
mobsya.fb.LockNode.prototype.mutate_request_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {mobsya.fb.NodeId=} obj
 * @returns {mobsya.fb.NodeId|null}
 */
mobsya.fb.LockNode.prototype.nodeId = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new mobsya.fb.NodeId).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.LockNode.startLockNode = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} requestId
 */
mobsya.fb.LockNode.addRequestId = function(builder, requestId) {
  builder.addFieldInt32(0, requestId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodeIdOffset
 */
mobsya.fb.LockNode.addNodeId = function(builder, nodeIdOffset) {
  builder.addFieldOffset(1, nodeIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.LockNode.endLockNode = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * Unlock a device so that other client can use it.
 * Once unlocked, the node appears ready to all clients.
 *
 * @constructor
 */
mobsya.fb.UnlockNode = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.UnlockNode}
 */
mobsya.fb.UnlockNode.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.UnlockNode=} obj
 * @returns {mobsya.fb.UnlockNode}
 */
mobsya.fb.UnlockNode.getRootAsUnlockNode = function(bb, obj) {
  return (obj || new mobsya.fb.UnlockNode).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
mobsya.fb.UnlockNode.prototype.requestId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
mobsya.fb.UnlockNode.prototype.mutate_request_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {mobsya.fb.NodeId=} obj
 * @returns {mobsya.fb.NodeId|null}
 */
mobsya.fb.UnlockNode.prototype.nodeId = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new mobsya.fb.NodeId).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.UnlockNode.startUnlockNode = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} requestId
 */
mobsya.fb.UnlockNode.addRequestId = function(builder, requestId) {
  builder.addFieldInt32(0, requestId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodeIdOffset
 */
mobsya.fb.UnlockNode.addNodeId = function(builder, nodeIdOffset) {
  builder.addFieldOffset(1, nodeIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.UnlockNode.endUnlockNode = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
mobsya.fb.RequestAsebaCodeLoad = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.RequestAsebaCodeLoad}
 */
mobsya.fb.RequestAsebaCodeLoad.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.RequestAsebaCodeLoad=} obj
 * @returns {mobsya.fb.RequestAsebaCodeLoad}
 */
mobsya.fb.RequestAsebaCodeLoad.getRootAsRequestAsebaCodeLoad = function(bb, obj) {
  return (obj || new mobsya.fb.RequestAsebaCodeLoad).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
mobsya.fb.RequestAsebaCodeLoad.prototype.requestId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
mobsya.fb.RequestAsebaCodeLoad.prototype.mutate_request_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {mobsya.fb.NodeId=} obj
 * @returns {mobsya.fb.NodeId|null}
 */
mobsya.fb.RequestAsebaCodeLoad.prototype.nodeId = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new mobsya.fb.NodeId).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
mobsya.fb.RequestAsebaCodeLoad.prototype.program = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.RequestAsebaCodeLoad.startRequestAsebaCodeLoad = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} requestId
 */
mobsya.fb.RequestAsebaCodeLoad.addRequestId = function(builder, requestId) {
  builder.addFieldInt32(0, requestId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodeIdOffset
 */
mobsya.fb.RequestAsebaCodeLoad.addNodeId = function(builder, nodeIdOffset) {
  builder.addFieldOffset(1, nodeIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} programOffset
 */
mobsya.fb.RequestAsebaCodeLoad.addProgram = function(builder, programOffset) {
  builder.addFieldOffset(2, programOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.RequestAsebaCodeLoad.endRequestAsebaCodeLoad = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
mobsya.fb.RequestAsebaCodeRun = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.RequestAsebaCodeRun}
 */
mobsya.fb.RequestAsebaCodeRun.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.RequestAsebaCodeRun=} obj
 * @returns {mobsya.fb.RequestAsebaCodeRun}
 */
mobsya.fb.RequestAsebaCodeRun.getRootAsRequestAsebaCodeRun = function(bb, obj) {
  return (obj || new mobsya.fb.RequestAsebaCodeRun).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
mobsya.fb.RequestAsebaCodeRun.prototype.requestId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
mobsya.fb.RequestAsebaCodeRun.prototype.mutate_request_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {mobsya.fb.NodeId=} obj
 * @returns {mobsya.fb.NodeId|null}
 */
mobsya.fb.RequestAsebaCodeRun.prototype.nodeId = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new mobsya.fb.NodeId).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.RequestAsebaCodeRun.startRequestAsebaCodeRun = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} requestId
 */
mobsya.fb.RequestAsebaCodeRun.addRequestId = function(builder, requestId) {
  builder.addFieldInt32(0, requestId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodeIdOffset
 */
mobsya.fb.RequestAsebaCodeRun.addNodeId = function(builder, nodeIdOffset) {
  builder.addFieldOffset(1, nodeIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.RequestAsebaCodeRun.endRequestAsebaCodeRun = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
mobsya.fb.Error = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.Error}
 */
mobsya.fb.Error.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.Error=} obj
 * @returns {mobsya.fb.Error}
 */
mobsya.fb.Error.getRootAsError = function(bb, obj) {
  return (obj || new mobsya.fb.Error).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
mobsya.fb.Error.prototype.requestId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
mobsya.fb.Error.prototype.mutate_request_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {mobsya.fb.ErrorType}
 */
mobsya.fb.Error.prototype.error = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {mobsya.fb.ErrorType} */ (this.bb.readInt32(this.bb_pos + offset)) : mobsya.fb.ErrorType.unknown_error;
};

/**
 * @param {mobsya.fb.ErrorType} value
 * @returns {boolean}
 */
mobsya.fb.Error.prototype.mutate_error = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.Error.startError = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} requestId
 */
mobsya.fb.Error.addRequestId = function(builder, requestId) {
  builder.addFieldInt32(0, requestId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {mobsya.fb.ErrorType} error
 */
mobsya.fb.Error.addError = function(builder, error) {
  builder.addFieldInt32(1, error, mobsya.fb.ErrorType.unknown_error);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.Error.endError = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
mobsya.fb.CompilationError = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.CompilationError}
 */
mobsya.fb.CompilationError.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.CompilationError=} obj
 * @returns {mobsya.fb.CompilationError}
 */
mobsya.fb.CompilationError.getRootAsCompilationError = function(bb, obj) {
  return (obj || new mobsya.fb.CompilationError).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
mobsya.fb.CompilationError.prototype.requestId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
mobsya.fb.CompilationError.prototype.mutate_request_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.CompilationError.startCompilationError = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} requestId
 */
mobsya.fb.CompilationError.addRequestId = function(builder, requestId) {
  builder.addFieldInt32(0, requestId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.CompilationError.endCompilationError = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
mobsya.fb.RequestCompleted = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.RequestCompleted}
 */
mobsya.fb.RequestCompleted.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.RequestCompleted=} obj
 * @returns {mobsya.fb.RequestCompleted}
 */
mobsya.fb.RequestCompleted.getRootAsRequestCompleted = function(bb, obj) {
  return (obj || new mobsya.fb.RequestCompleted).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
mobsya.fb.RequestCompleted.prototype.requestId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
mobsya.fb.RequestCompleted.prototype.mutate_request_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.RequestCompleted.startRequestCompleted = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} requestId
 */
mobsya.fb.RequestCompleted.addRequestId = function(builder, requestId) {
  builder.addFieldInt32(0, requestId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.RequestCompleted.endRequestCompleted = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
mobsya.fb.Message = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {mobsya.fb.Message}
 */
mobsya.fb.Message.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {mobsya.fb.Message=} obj
 * @returns {mobsya.fb.Message}
 */
mobsya.fb.Message.getRootAsMessage = function(bb, obj) {
  return (obj || new mobsya.fb.Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {mobsya.fb.AnyMessage}
 */
mobsya.fb.Message.prototype.messageType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {mobsya.fb.AnyMessage} */ (this.bb.readUint8(this.bb_pos + offset)) : mobsya.fb.AnyMessage.NONE;
};

/**
 * @param {mobsya.fb.AnyMessage} value
 * @returns {boolean}
 */
mobsya.fb.Message.prototype.mutate_message_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
mobsya.fb.Message.prototype.message = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
mobsya.fb.Message.startMessage = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {mobsya.fb.AnyMessage} messageType
 */
mobsya.fb.Message.addMessageType = function(builder, messageType) {
  builder.addFieldInt8(0, messageType, mobsya.fb.AnyMessage.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
mobsya.fb.Message.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(1, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
mobsya.fb.Message.endMessage = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
mobsya.fb.Message.finishMessageBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for ECMAScript6 Modules
export {mobsya};
